module Example.Box is
    type Box[T: Type]: Linear;

    generic [T: Type]
    function Make(val: T): Either[Box[T], T];

    generic [T: Type]
    function Unbox(box: Box[T]): T;

    generic [X: Free]
    function Swap_Free(box: Box[X], new: X): Box[X];

    generic [T: Free, R: Region]
    function Read_Free(boxref: &[Box[T], R]): T;

    generic [T: Free, R: Region]
    function Store_Free(boxref: &![Box[T], R], value: T): Unit;

    generic [T: Free, R: Region]
    function Swap_Mut(boxref: &![Box[T], R], value: T): T;

    function Main(root: Root_Capability): Root_Capability;
end module.
