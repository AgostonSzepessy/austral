module Example.Buffer is
    type Buffer[T: Type]: Linear;

    -- Lifecycle

--    generic [T: Type]
 --   function Empty_Buffer(): Buffer[T];

    generic [T: Free]
    function Initialize(size: Index, elem: T): Buffer[T];

    generic [T: Type]
    function Destroy_Buffer(buffer: Buffer[T]): Unit;

    -- Query

    generic [T: Free, R: Region]
    function Buffer_Size(buffer: &[Buffer[T], R]): Index;

    -- Retrieval

    -- generic [T: Type, R: Region]
    -- function Nth_Ref(buffer: &[Buffer[T], R], index: Index): &[T, R];

    -- Insertion

    --generic [T: Type, R: Region]
    --function Insert_After(buffer: &![Buffer[T], R], elem: T): Unit;

    -- Removal

    --generic [T: Type, R: Region]
    --function Remove_Nth(buffer: &![Buffer[T], R], index: Index): T;

    function Main(root: Root_Capability): Root_Capability;
end module.
