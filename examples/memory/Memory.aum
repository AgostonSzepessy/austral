import Austral.Memory (
    Address,
    Pointer,
    allocate,
    Load,
    Store,
    deallocate,
    nullCheck
);

module body Example.Memory is
    pragma Unsafe_Module;

    function main(): ExitCode is
        let addr: Address[Int32] := allocate(sizeof(Int32));
        case nullCheck(addr) of
            when Some(value: Pointer[Int32]) do
                deallocate(value);
            when None do
                -- Do nothing.
                skip;
        end case;
        return ExitSuccess();
    end;
end module body.
