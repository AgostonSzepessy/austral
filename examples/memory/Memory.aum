import Austral.Memory (
    Address,
    Allocate,
    Load,
    Store,
    Deallocate,
    Null_Pointer
);

module body Example.Memory is
    pragma Unsafe_Module;

    function Main(root: Root_Capability): Root_Capability is
        let ptr: Address[Integer_32] := Allocate(sizeof(Integer_32));
        let null: Address[Integer_32] := Null_Pointer();
        if ptr /= null then
            Deallocate(ptr);
        end if;
        return root;
    end;
end module body.
