TODO:

- Fix that bug where function calls in progns arent made for some reason (wrap
  every funcall in a let? how does that infere with linearity?)
- Use `the` only to verify types match
- Define an integer-cast thing to cast integers or some such
- Count appearances of type variables in types
- Predicate to determine if a function is return-type polymorphic
- Add Austral prelude file and script to embed it into a string
- Implement austral.ext.cffi:malloc (generic function, prelude)
- Implement austral.ext.cffi:free (generic function, prelude)
- Implement austral.ext.cffi:null-pointer (built-in)
- Implement austral.ext.cffi:null? (generic function, prelude)
- Implement static-array-index
- Compile definstance methods to generic, not concrete, functions

LONG-TERM TODO:

- Static array constructors
- Add support for an --entrypoint flag to define the main() function

- Error on repeat type variables in an instance declaration
- Error on phantom type parameters in a type alias
- Parse nested comments
- Show symbol names in error messages
- Better error messages
- Linearity

- Parse deftemplate declarations
- handle defmacro declarations
- Macro match
- Macroexpansion
- Macro and
- Macro or
- Function and*
- Function or*
- Bitwise operators

- Tuple bind
- Austral prelude
- Prelude: equality and comparison instances

- Implement defcfun
- Runtime support for saturation arithmetic

- Implement static-array constructor
- Lift static array constructors to global constants
- Verify if an expression is a valid static array element

DONE:

- Utils
- Set
- Map
- Ident structure
- Basic Module structure
- CST
- Parser tests
- Parser
- Symbol resolution in modules
- Parse files
- Parse floating point numbers
- Test float parsing
- Process escape sequences in parsed strings
- Define the expression AST datatype
- Parse RCST nodes into AST nodes
- Alpha renaming
- Define the toplevel AST datatype
- Handle type declarations
- Handle datatype declarations
- C++ backend
- Type checking
- Compile type aliases
- Compile disjunctions
- Parse defmodule declarations into a proper module instance
- Compile function calls
- Modular arithmetic
- Checked arithmetic
- Saturation arithmetic
- Fix function declaration types
- true, false and nil
- Boolean function not
- Compile prelude.hpp into an SML file with the prelude embedded into a string
- CLI interface
- Start REPL from CLI
- Compile files from CLI
- Builtin integer/float comparison functions
- Alpha top_ast
- OAST top_ast
- RCST->OAST top_ast
- OAST top_ast -> Alpha top_ast
- Turn params from symbols to variables
- Update AST.transformTop to use Alpha.top_ast instead of RCST
- Fix parameter lookup
- Parse definstance declarations
- Compile typeclass instances to a list of HIR generic functions
- handle defclass declarations
- resolve should have an extra argument with the type parameter environment
  (e.g., in a generic function definition, the set of defined type parameters)
- handle definstance declarations
- Define austral.ext.cffi module
- Define static array type
- Parse static-array type specifier
- Implement static-array-length
- Compile string literals as static array constructors
- Implement foreign-funcall
- OrderedSet.toUnordered
- declaration AST between AST and TAST
- better handling of type parameters throughout the codebase
- Generic functions
- Implement austral.ext.cffi:size-of
- Handle foreign functions that return void in foreign-funcall
- Add austral.ext.cffi:foreign-pointer type
- Fix function calls being thrown out in the all-but-last body of progn (MIR, HIR)
- Fix escaped strings
